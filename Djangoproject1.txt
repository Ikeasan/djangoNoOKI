Djangoproject1

環境構築

mkdir djangoproject1　　➀#C:直下にディレクトリ作成(プロジェクトディレクトリ)
↓
【②設定ディレクトリの作成】
django-admin startproject config　×
python -m django startproject config . 〇

「config(スペース).」とすることがポイント
「(スペース).」がなければ以下のようなconfigディレクトリが2つできてしまい使い勝手が悪くなるので注意。

<ディレクトリ構造>
・djangoproject1
	Ｌconfig
	      Ｌ__init__.py
	        asgi.py
	        settings.py
	        urls.py
	        wsgi.py
	  manage.py
	
【③マイグレーション】
python manage.py migrate

<ディレクトリ構造>
・djangoproject1
	Ｌconfig
	      Ｌ__init__.py
	        asgi.py
	        settings.py
	        urls.py
	        wsgi.py

	　db.sqlite3　#追加！！
	  manage.py

【④アプリを作成　(アプリ名はdjango_appとした)】
python manage.py startapp django_app


<ディレクトリ構造>
・djangoproject1
	Ｌconfig
	      Ｌ__init__.py
	        asgi.py
	        settings.py
	        urls.py
	        wsgi.py

	　django_app #追加！！
	　　　　Ｌmigrations
			L__init__.py
　　　　　　　　　__init__.py
	          admin.py
	          apps.py
	          models.py
	          tests.py
		  views.py

	　db.sqlite3　
	  manage.py

【⑤、④で作成したアプリをsetting.pyに追加する】


ーーーーーーーーーーーーーー＜ログイン機能＞ーーーーーーーーーーーーーーーーー
ログイン画面で管理者アカウントに登録されてる
ユーザー名とPWで登録したいので
管理者アカウントを作成する。

python manage.py createsuperuser
ユーザー名：kondo
メアド：tky2302143@stu.o-hara.ac.jp
PW：tadashi0627

ログイン時のユーザー名とパスワードは上記！



ーーーーーーーーーーーーーー＜投稿機能＞ーーーーーーーーーーーーーーーーーーー
<models.py.>
uuidでデータにIDをふる！
型のフィールドを適切に設定していく
verbose_nameは画面の入力項目のラベルとして使われる！
↓
モデルの定義が終わったらマイグレーションを行う。
python manage.py makemigrations【マイグレーション用のファイルを作成するコマンド】
実行後...\0001_initial.pyが作成される
↓
python manage.py migrate【PostとCommentのデータを格納するテーブル作成】


<forms.py作成>...リクエストで受けとったバリデーションチェックを行ったり
		 データの型変換を自動で行うもの。

<views.py>で、データを保存するためのviewを作成！













Djangoで投稿アプリを作成している。
以下のmodels.pyを考慮したHTMLとCSSを作成したい		  
	　　　　  

